

questions = [
            {
                "question": "Какова основная функция Django?",
                "options": ["Создание дизайна веб-приложений", "Управление базами данных", 
                            """Предоставление среды для 
    разработки веб-приложений""", """Оптимизация 
производительности сервера"""],
                "correct_option": 2,
                "fact_text": "Правильный ответ: Предоставление среды для разработки веб-приложений"
            },
            {
                "question": "Откуда взялось название Django?",
                "options": ["""В честь фильма 
'Джанго Освобождённый' """, """В честь джазового 
музыканта Джанго Рейнхардта.""", """Составленные вместе инициалы 
первых разработчиков фреймворка.""", """Случайный набор букв"""],
                "correct_option": 1,
                "fact_text": "Правильный ответ: В честь джазового музыканта Джанго Рейнхардта."
            },
            {
                "question": "Какой командой создаётся Django-проект?",
                "options": ["""django-admin 
startproject название""", "django-start название", """django new название""", """create-django-project название"""],
                "correct_option": 0,
                "fact_text": "Правильный ответ: Django-проект создаётся командой django-admin startproject название_проекта"
            },
            {
                "question": "Какой командой запускается встроенный веб-сервер?",
                "options": ["""python manage.py runserver""", "python manage.py startserver", """python server.py""", """python django run.py"""],
                "correct_option": 0,
                "fact_text": "Правильный ответ: встроенный веб-сервер запускается командой python manage.py runserver"
            },
            {
                "question": "Что такое Django ORM и какую функцию оно выполняет?",
                "options": [
"""Инструмент для создания 
пользовательского интерфейса в Django""", 
"""Система автоматического
тестирования в Django""", 
""" "Переводчик" запросов
с языка Python на язык SQL""", 
"""Механизм для генерации 
случайных данных в Django"""],
                "correct_option": 2,
                "fact_text": "Правильный ответ: С базами данных Django общается через инструмент Django ORM (англ. Object-Relational Mapping, «объектно-реляционное отображение»). Это «переводчик» с языка Python на язык SQL, понятный большинству баз данных."
            },
            {
                "question": "Что такое URL-шаблоны в Django?",
                "options": [
"""URL-шаблоны в Django - 
это механизм 
для связывания URL-адресов 
с представлениями 
(views) веб-приложения.""", 
"""это специальные шаблоны 
для создания URL-адресов, 
используемые только в админке""", 
"""Это функции 
для создания случайных URL-адресов""", 
"""Это инструмент 
для создания QR-кодов из URL-адресов."""],
                "correct_option": 0,
                "fact_text": "Правильный ответ: URL-шаблоны в Django - это механизм для связывания URL-адресов с представлениями (views) веб-приложения. Они определяют, какие действия должны быть выполнены при обращении к определенному URL-адресу."
            },
            {
                "question": "Как передать данные из представления (views) в шаблон Django?",
                "options": [
"""Используются URL-шаблоны""", 
"""Используется context (словарь) 
для передачи данных 
из представления в шаблон в Django.""", 
"""Данные автоматически передаются 
из представления в шаблон 
без дополнительных действий""", 
"""используются специальные HTML-теги"""],
                "correct_option": 1,
                "fact_text": "Правильный ответ: Для передачи данных из представления в шаблон Django используется контекст. Контекст представляет собой словарь, в котором данные доступны в шаблоне. Чтобы передать данные, вы можете добавить их в контекст и вернуть его из представления."
            },
            {
                "question": "Что такое модель в Django?",
                "options": [
"""Это механизм для создания анимаций 
и визуальных эффектов на веб-сайтах.""", 
"""Это файл конфигурации для настройки 
интерфейса администратора.""", 
"""Это специальный шаблон 
для отображения данных на веб-страницах.""", 
"""Это класс, 
определяющий структуру данных 
и методы доступа к ним для работы 
с базой данных."""],
                "correct_option": 3,
                "fact_text": "Правильный ответ: Модель в Django - это класс, который определяет структуру данных и методы доступа к этим данным. Модель является основой для работы с базой данных и предоставляет удобные способы создания, чтения, обновления и удаления записей."
            },
            {
                "question": "Какой командой загружается статика?",
                "options": [
"""{% load static %}""", 
"""{% upload static %}""", 
""" {% include static %}""", 
""" {% store static %}"""],
                "correct_option": 0,
                "fact_text": "Правильный ответ:  {% load static %} - это команда для загрузки статических файлов в шаблоне Django."
            },
            {
                "question": "Как передается информация из бэкенда в фронтенд в Django?",
                "options": [
"""Информация из бэкенда 
в фронтенд в Django передается 
автоматически без дополнительных действий.""", 
"""Третий параметр view-функции 
render(.,.,context), 
в шаблоне - {{ key }} """, 
""" Используются тройные кавычки для 
передачи данных 
из view-функции в HTML-шаблон в Django.""", 
"""Используется метод send_data() 
внутри view-функции."""],
                "correct_option": 1,
                "fact_text": "Правильный ответ:Для передачи данных из view-функции в HTML-шаблон в Django используется третий параметр функции render(), Этот параметр представляет собой словарь, в котором ключи представляют собой переменные, а значения - данные, которые передаются. В самом шаблоне данные выводятся с использованием двойных фигурных скобок {{ key }}, где key - это ключ, по которому хранятся данные в словаре контекста."
            },
            {
                "question": "Что делает HttpResponse?",
                "options": [
"""Выводит информацию по поводу соединения""", 
"""Выводит на экран HTML-шаблоны""", 
"""Устанавливает соединение с сервером""", 
"""Выводит на экран текст с HTML"""],
                "correct_option": 3,
                "fact_text": "Правильный ответ: Выводит на экран текст с HTML"
            },
            {
                "question": "Какие функции выполняет файл views.py?",
                "options": [
"""Указывает какие 
HTML-шаблоны должны открываться""", 
"""Служит для 
создания HTML-шаблонов""", 
"""Через него можно 
выводить значения переданные из Python""", 
"""Он позволяет 
выводить информацию на экран"""],
                "correct_option": 0,
                "fact_text": "Правильный ответ: Указывает какие HTML-шаблоны должны открываться"
            },
            {
                "question": "Как называется встроенная база данных в Django?",
                "options": [
"""SQLite""", 
"""PostgreSQL""", 
"""NoSQL""", 
"""MySQL"""],
                "correct_option": 0,
                "fact_text": "Правильный ответ: SQLite"
            },
            {
                "question": "Каждое новое приложение необходимо зарегистрировать в...",
                "options": [
"""файле urls.py""", 
"""файле views.py""", 
"""командной строке 
через файл setting.py""", 
"""файле setting.py, 
добавив в список INSTALLED_APPS"""],
                "correct_option": 3,
                "fact_text": "Правильный ответ: Каждое новое приложение необходимо регистрировать в файле setting.py, добавив в список INSTALLED_APPS"
            },
        ]